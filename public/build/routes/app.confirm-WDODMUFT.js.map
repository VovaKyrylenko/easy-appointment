{
  "version": 3,
  "sources": ["../../../app/routes/app.confirm.tsx", "../../../app/graphql/queries/create-booking.ts", "../../../app/hooks/use-create-booking.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app.confirm.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app.confirm.tsx\");\n  import.meta.hot.lastModified = \"1725543672372.775\";\n}\n// REMIX HMR END\n\nimport { Link, useLoaderData, useNavigation } from \"@remix-run/react\";\nimport { Button } from \"~/components/ui/button\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { destroySession, getSession } from \"~/services/session.server\";\nimport { ArrowLeft, Check, Loader2 } from \"lucide-react\";\nimport { useCreateBooking } from \"~/hooks/use-create-booking\";\nexport default function ConfirmBooking() {\n  _s();\n  const {\n    apartment,\n    dates,\n    userData\n  } = useLoaderData();\n  const {\n    createBooking,\n    error\n  } = useCreateBooking();\n  const transition = useNavigation();\n  if (!apartment || !dates?.from || !dates?.to || !userData) {\n    return <p>Something went wrong. Please go back and fill in all the details.</p>;\n  }\n  const calculateTotalPrice = () => {\n    const startDate = new Date(dates.from);\n    const endDate = new Date(dates.to);\n    const days = Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n    return days * apartment.price;\n  };\n  const handleConfirmBooking = async () => {\n    try {\n      await createBooking({\n        variables: {\n          apartmentId: apartment.id,\n          startDate: dates.from,\n          endDate: dates.to,\n          userName: userData.userName,\n          userPhone: userData.userPhone,\n          userEmail: userData.userEmail\n        }\n      });\n      await fetch(\"/app/confirm\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Remix-Action\": \"destroy-session\"\n        }\n      });\n    } catch (error) {\n      console.error(\"Booking creation failed:\", error);\n    }\n  };\n  const isSubmitting = transition.state !== \"idle\";\n  return <div className=\"flex items-center justify-center flex-1\">\n      <div className=\"max-w-lg w-full\">\n        <h2 className=\"text-2xl font-semibold mb-6 text-center\">\n          Booking Summary\n        </h2>\n\n        {error && <p className=\"text-red-500 text-center\">\n            Failed to create booking: {error.message}\n          </p>}\n\n        <div className=\"space-y-4\">\n          <div className=\"flex justify-between\">\n            <span className=\"font-medium\">Name:</span>\n            <span>{userData.userName}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"font-medium\">Phone:</span>\n            <span>{userData.userPhone}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"font-medium\">Email:</span>\n            <span>{userData.userEmail}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"font-medium\">Apartment:</span>\n            <span>{apartment.name}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"font-medium\">Location:</span>\n            <span>{apartment.location}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"font-medium\">Check-in:</span>\n            <span>{new Date(dates.from).toDateString()}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"font-medium\">Check-out:</span>\n            <span>{new Date(dates.to).toDateString()}</span>\n          </div>\n          <div className=\"flex justify-between text-lg font-semibold\">\n            <span>Total Price:</span>\n            <span>${calculateTotalPrice().toFixed(2)}</span>\n          </div>\n        </div>\n\n        <div className=\"flex mt-6 space-x-2\">\n          <Button type=\"button\" disabled={isSubmitting}>\n            {isSubmitting ? <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Please wait\n              </> : <Link to=\"/app/user-data\" className=\"flex items-center\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back\n              </Link>}\n          </Button>\n          <Button type=\"submit\" disabled={isSubmitting} onClick={handleConfirmBooking}>\n            {isSubmitting ? <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Please wait\n              </> : <Link to=\"/app/success\">\n                Confirm Booking\n                <Check className=\"ml-2 h-5 w-5\" />\n              </Link>}\n          </Button>\n        </div>\n      </div>\n    </div>;\n}\n_s(ConfirmBooking, \"GEbEkKf1TO1jD+vxS9bhbFzEeag=\", false, function () {\n  return [useLoaderData, useCreateBooking, useNavigation];\n});\n_c = ConfirmBooking;\nexport const loader = async ({\n  request\n}) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const apartment = session.get(\"apartment\");\n  const dates = session.get(\"date\");\n  const userData = session.get(\"userData\");\n  return json({\n    apartment,\n    dates,\n    userData\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  if (session) {\n    return redirect(\"/app/success\", {\n      headers: {\n        \"Set-Cookie\": await destroySession(session)\n      }\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"ConfirmBooking\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/graphql/queries/create-booking.ts\"\n);\nimport.meta.hot.lastModified = \"1725455425819.489\";\n}\n// REMIX HMR END\n\nimport { gql } from \"@apollo/client\";\n\nexport const CREATE_BOOKING = gql`\n  mutation CreateBooking(\n    $apartmentId: ID!\n    $startDate: String!\n    $endDate: String!\n    $userName: String!\n    $userPhone: String!\n    $userEmail: String!\n  ) {\n    createBooking(\n      apartmentId: $apartmentId\n      startDate: $startDate\n      endDate: $endDate\n      userName: $userName\n      userPhone: $userPhone\n      userEmail: $userEmail\n    ) {\n      id\n      userName\n      apartment {\n        name\n      }\n      startDate\n      endDate\n    }\n  }\n`;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/use-create-booking.ts\"\n);\nimport.meta.hot.lastModified = \"1725455460366.2283\";\n}\n// REMIX HMR END\n\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_BOOKING } from \"~/graphql/queries/create-booking\";\n\nexport const useCreateBooking = () => {\n  const [createBooking, { data, loading, error }] = useMutation(CREATE_BOOKING);\n  return { createBooking, data, loading, error };\n};\n"],
  "mappings": "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",
  "names": ["error"]
}
